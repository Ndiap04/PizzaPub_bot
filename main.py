from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters import Command
import db

from config import TOKEN
import keyboards

API_TOKEN = TOKEN

bot = Bot(API_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)

rest = """<b><i>–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É</i></b>\n<u>—É–ª. –¢–∞–≥–∞–Ω—Ä–æ–≥—Å–∫–∞—è, 112/6</u>\n<u>–ø—Ä-—Ç –õ–µ–Ω–∏–Ω–∞, 99</u>\n<u>—É–ª. –ü—É—à–∫–∏–Ω—Å–∫–∞—è, 169</u>\n<u>—É–ª. –í–æ–ª–∫–æ–≤–∞, 9–±</u>\n<u>–ø—Ä-—Ç –°–µ–ª—å–º–∞—à, 9</u>\n<u>–ø—Ä-—Ç –ë—É–¥–µ–Ω–Ω–æ–≤—Å–∫–∏–π, 19–∞/55</u>"""


async def on_startup(_):
    print("Bot was started")


@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ PizzaPub', reply_markup=keyboards.kb)
    await message.delete()
    await bot.send_photo(message.from_user.id,
                         "https://popmenucloud.com/hacnfrue/40ce9bb7-a08e-4abd-9926-56ee24b02e07.JPG")


@dp.message_handler(commands=['Location'])
async def situation_handler(message: types.Message):
    await bot.send_message(message.from_user.id, text=rest, parse_mode="HTML")


@dp.message_handler(commands=['Schedule'])
async def work_schedule_handler(message: types.Message):
    await bot.send_message(message.from_user.id, text="–í—Å-–ß—Ç —Å 9:00 –¥–æ 20:00, –ü—Ç-–°–± —Å 10:00 –¥–æ 23:00")


@dp.message_handler(commands=['Menu'])
async def menu_handler(message: types.Message):
    await db.sql_read(message)


@dp.callback_query_handler()
async def callback_feedback_pizza(callback: types.CallbackQuery):
    if callback.data == 'Like':
        await callback.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à —Ö–æ—Ä–æ—à–∏–π –æ—Ç–∑—ã–≤‚ù§Ô∏è")
    elif callback.data == 'Dislike':
        await callback.answer("–°–æ–∂–∞–ª–µ–µ–º, —á—Ç–æ –Ω–µ –æ–ø—Ä–∞–≤–¥–∞–ª–∏ –≤–∞—à–∏—Ö –æ–∂–∏–¥–∞–Ω–∏–π.üò¢ –ó–∞–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ")


if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)
